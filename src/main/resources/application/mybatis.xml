<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- JDBC Data Source. It is assumed you have MySQL running on localhost port 3306 with username root and blank password. Change below if it's not the case -->
    <!-- 库数据源 -->
    <bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${filter.jdbc.url}"/>
        <property name="username" value="${filter.jdbc.username}"/>
        <property name="password" value="${filter.jdbc.password}"/>
        <property name="connectionInitSqls">
            <list>
                <!-- Emoji support -->
                <value>SET NAMES utf8mb4</value>
            </list>
        </property>

        <!-- 配置初始化大小、最小、最大 -->
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="10"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="10"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="mergeStat" /> -->
        <property name="filters" value="config,wall,stat"/>
    </bean>

    <!-- 库数据源Proxy -->
    <bean id="baseDataSourceProxy" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <property name="targetDataSource" ref="baseDataSource"/>
    </bean>

    <!-- Session工厂，SqlSessionFactoryBean实现了Spring的FactoryBean接口 -->
    <bean id="baseSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- SqlSessionFactory的数据源 -->
        <property name="dataSource" ref="baseDataSourceProxy"/>
        <!-- 配置typeAliasesPackage，这样在mapper的xml文件中可以直接写类名，而不需要类的完整限定名：配置位于mapper所在的包 -->
        <!-- 系统模块typeAliasesPackage包路径配置 -->
        <property name="typeAliasesPackage" value="org.spring.ysj.sample.entity"/>
        <!--<property name="configLocation" value="classpath:mybatis/generatorConfig.xml" />-->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
    </bean>

    <!-- ScanFiles -->
    <bean id="baseMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 系统模块Mapper扫描包路径配置 -->
        <property name="sqlSessionFactoryBeanName" value="baseSqlSessionFactory"/>
        <property name="basePackage" value="org.spring.ysj.sample.dao.mapper"/>
    </bean>

    <!-- 配置事务管理器: 开启Spring的事务处理 -->
    <bean name="baseTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="baseDataSourceProxy"/>
    </bean>

    <!-- Activates annotation based transaction management -->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="baseTransactionManager" />

</beans>